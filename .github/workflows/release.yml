name: Release

on:
  release:
    types: [created]

jobs:
  build:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: dbhub
            asset_name: dbhub-linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: dbhub
            asset_name: dbhub-linux-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: dbhub
            asset_name: dbhub-darwin-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: dbhub
            asset_name: dbhub-darwin-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: dbhub.exe
            asset_name: dbhub-windows-amd64.exe

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools
        if: runner.os == 'Linux' && contains(matrix.target, 'aarch64')
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifact
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release/
          if [ "${{ runner.os }}" = "Windows" ]; then
            7z a ../../../${{ matrix.asset_name }}.zip ${{ matrix.artifact_name }}
          else
            tar czf ../../../${{ matrix.asset_name }}.tar.gz ${{ matrix.artifact_name }}
          fi

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ matrix.asset_name }}.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
