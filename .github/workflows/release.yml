name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: aarch64-apple-darwin
            arch: aarch64
            platform: macos
          - os: macos-latest
            target: x86_64-apple-darwin
            arch: amd64
            platform: macos
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            arch: amd64
            platform: linux
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            arch: arm64
            platform: linux

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Set up dependencies
        if: matrix.platform == 'macos'
        run: |
          brew install lua@5.4 pkg-config

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install lua@5.4

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y liblua5.4-dev
          if [ "${{ matrix.arch }}" = "arm64" ]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu liblua5.4-dev:arm64
            echo "CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          fi

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
        env:
          PKG_CONFIG_PATH: /usr/local/opt/lua@5.4/lib/pkgconfig
          LUA_INCLUDE_DIR: /usr/local/opt/lua@5.4/include
          LUA_LIB_DIR: /usr/local/opt/lua@5.4/lib

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ matrix.arch }}
          path: dbhub-${{ matrix.platform }}-${{ matrix.arch }}*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: artifacts/**/*